import{s as n,p as r,e as a,a as t,t as e,c as s,b as $,m,f as l,d as f,g as o,h as g,i as c,j as u,q as p}from"../chunks/scheduler.BHmUeXpX.js";import{S as i,i as h,f as d,b as w,d as v,m as b,t as B,a as E,e as R}from"../chunks/index.DEa-WhvI.js";import{C as x}from"../chunks/CodeSpan.CLzOd-Y1.js";import{C as P}from"../chunks/CodeExecuter.B1Kf-BD8.js";function C(n){let i,h,C,H,L,k,j,S,D,I,V,q,G,N,T,y,z,A,F,J,K,M,O,Q,U,W,X,Y,Z,_,nn,rn,an,tn,en,sn,$n,mn,ln,fn,on,gn,cn,un,pn,hn,dn,wn,vn,bn,Bn,En,Rn,xn,Pn,Cn,Hn,Ln,kn,jn,Sn,Dn,In,Vn,qn,Gn,Nn,Tn,yn,zn,An,Fn="データの型";function Jn(r){n[3](r)}V=new x({props:{data:["Number","white"]}}),G=new x({props:{data:["String","white"]}}),J=new x({props:{data:['""',"lightblue"]}}),X=new x({props:{data:["num","white"]}}),Z=new x({props:{data:["str","white"]}});let Kn={};return void 0!==n[1]&&(Kn.codeExeProps=n[1]),tn=new P({props:Kn}),n[2](tn),r.push((()=>d(tn,"codeExeProps",Jn))),gn=new x({props:{data:["+","white"]}}),hn=new x({props:{data:["num + num","white"]}}),wn=new x({props:{data:["str + str","white"]}}),En=new x({props:{data:["str + num","white"]}}),kn=new x({props:{data:["-","white"]}}),Sn=new x({props:{data:["str - num","white"]}}),Nn=new x({props:{data:["+","white"]}}),{c(){i=a("div"),h=a("h2"),h.textContent=Fn,C=t(),H=a("div"),L=a("hr"),k=t(),j=a("p"),S=e("変数には様々なデータを代入することができます。データの種類を「型」とよびます。\n      "),D=a("br"),I=e("\n      型には様々な種類があり、たとえば「数値型("),w(V.$$.fragment),q=e(")」や「文字列型("),w(G.$$.fragment),N=e(")」があります。"),T=t(),y=a("hr"),z=t(),A=a("p"),F=e("数字は、囲み文字"),w(J.$$.fragment),K=e("で囲むと文字列型になり、囲まないと数値型として扱われます。\n      "),M=a("br"),O=e("\n      数字以外の文字を含む場合は、囲むと文字列型になり、囲まないと変数として扱われます。"),Q=t(),U=a("p"),W=e("このプログラムを実行して、"),w(X.$$.fragment),Y=e(" と "),w(Z.$$.fragment),_=e(" がどのように扱われるか見てみましょう。"),nn=t(),rn=a("hr"),an=t(),w(tn.$$.fragment),sn=t(),$n=a("div"),mn=a("hr"),ln=t(),fn=a("p"),on=e("また、"),w(gn.$$.fragment),cn=e(" のような操作を「演算子」とよびますが、データの型によって演算子の効果が変わることがあります。\n      "),un=a("br"),pn=e("\n      例えば、数値型同士を "),w(hn.$$.fragment),dn=e(" すると足し算をしますが、文字列型同士を "),w(wn.$$.fragment),vn=e(" すると文字列をつなぎます。\n      "),bn=a("br"),Bn=e("\n      そして、文字列型と数値型を "),w(En.$$.fragment),Rn=e(" すると、数値型が文字列型に変換され、文字列としてつなぎます。"),xn=t(),Pn=a("hr"),Cn=t(),Hn=a("p"),Ln=e("では、演算子"),w(kn.$$.fragment),jn=e(" を使うとどうなるでしょう？\n      "),w(Sn.$$.fragment),Dn=e(" に書き換えて実行してみましょう。\n      "),In=a("br"),Vn=e("\n      結果は予想通りでしたか？それとも不思議な結果でしたか？\n      "),qn=a("br"),Gn=e("\n      （ヒント："),w(Nn.$$.fragment),Tn=e("の場合は、プログラムが自動的に数値を文字列に変換してくれましたね。）"),yn=t(),zn=a("hr"),this.h()},l(n){i=s(n,"DIV",{class:!0});var r=$(i);h=s(r,"H2",{class:!0,"data-svelte-h":!0}),"svelte-7kuwmt"!==m(h)&&(h.textContent=Fn),C=l(r),H=s(r,"DIV",{class:!0});var a=$(H);L=s(a,"HR",{class:!0}),k=l(a),j=s(a,"P",{});var t=$(j);S=f(t,"変数には様々なデータを代入することができます。データの種類を「型」とよびます。\n      "),D=s(t,"BR",{}),I=f(t,"\n      型には様々な種類があり、たとえば「数値型("),v(V.$$.fragment,t),q=f(t,")」や「文字列型("),v(G.$$.fragment,t),N=f(t,")」があります。"),t.forEach(o),T=l(a),y=s(a,"HR",{class:!0}),z=l(a),A=s(a,"P",{});var e=$(A);F=f(e,"数字は、囲み文字"),v(J.$$.fragment,e),K=f(e,"で囲むと文字列型になり、囲まないと数値型として扱われます。\n      "),M=s(e,"BR",{}),O=f(e,"\n      数字以外の文字を含む場合は、囲むと文字列型になり、囲まないと変数として扱われます。"),e.forEach(o),Q=l(a),U=s(a,"P",{});var g=$(U);W=f(g,"このプログラムを実行して、"),v(X.$$.fragment,g),Y=f(g," と "),v(Z.$$.fragment,g),_=f(g," がどのように扱われるか見てみましょう。"),g.forEach(o),nn=l(a),rn=s(a,"HR",{class:!0}),a.forEach(o),an=l(r),v(tn.$$.fragment,r),sn=l(r),$n=s(r,"DIV",{class:!0});var c=$($n);mn=s(c,"HR",{class:!0}),ln=l(c),fn=s(c,"P",{});var u=$(fn);on=f(u,"また、"),v(gn.$$.fragment,u),cn=f(u," のような操作を「演算子」とよびますが、データの型によって演算子の効果が変わることがあります。\n      "),un=s(u,"BR",{}),pn=f(u,"\n      例えば、数値型同士を "),v(hn.$$.fragment,u),dn=f(u," すると足し算をしますが、文字列型同士を "),v(wn.$$.fragment,u),vn=f(u," すると文字列をつなぎます。\n      "),bn=s(u,"BR",{}),Bn=f(u,"\n      そして、文字列型と数値型を "),v(En.$$.fragment,u),Rn=f(u," すると、数値型が文字列型に変換され、文字列としてつなぎます。"),u.forEach(o),xn=l(c),Pn=s(c,"HR",{class:!0}),Cn=l(c),Hn=s(c,"P",{});var p=$(Hn);Ln=f(p,"では、演算子"),v(kn.$$.fragment,p),jn=f(p," を使うとどうなるでしょう？\n      "),v(Sn.$$.fragment,p),Dn=f(p," に書き換えて実行してみましょう。\n      "),In=s(p,"BR",{}),Vn=f(p,"\n      結果は予想通りでしたか？それとも不思議な結果でしたか？\n      "),qn=s(p,"BR",{}),Gn=f(p,"\n      （ヒント："),v(Nn.$$.fragment,p),Tn=f(p,"の場合は、プログラムが自動的に数値を文字列に変換してくれましたね。）"),p.forEach(o),yn=l(c),zn=s(c,"HR",{class:!0}),c.forEach(o),r.forEach(o),this.h()},h(){g(h,"class","cLessonTitle"),g(L,"class","cBorderLine"),g(y,"class","cBorderLine"),g(rn,"class","cBorderLine"),g(H,"class","w-full"),g(mn,"class","cBorderLine"),g(Pn,"class","cBorderLine"),g(zn,"class","cBorderLine"),g($n,"class","w-full"),g(i,"class","cBookContents")},m(n,r){c(n,i,r),u(i,h),u(i,C),u(i,H),u(H,L),u(H,k),u(H,j),u(j,S),u(j,D),u(j,I),b(V,j,null),u(j,q),b(G,j,null),u(j,N),u(H,T),u(H,y),u(H,z),u(H,A),u(A,F),b(J,A,null),u(A,K),u(A,M),u(A,O),u(H,Q),u(H,U),u(U,W),b(X,U,null),u(U,Y),b(Z,U,null),u(U,_),u(H,nn),u(H,rn),u(i,an),b(tn,i,null),u(i,sn),u(i,$n),u($n,mn),u($n,ln),u($n,fn),u(fn,on),b(gn,fn,null),u(fn,cn),u(fn,un),u(fn,pn),b(hn,fn,null),u(fn,dn),b(wn,fn,null),u(fn,vn),u(fn,bn),u(fn,Bn),b(En,fn,null),u(fn,Rn),u($n,xn),u($n,Pn),u($n,Cn),u($n,Hn),u(Hn,Ln),b(kn,Hn,null),u(Hn,jn),b(Sn,Hn,null),u(Hn,Dn),u(Hn,In),u(Hn,Vn),u(Hn,qn),u(Hn,Gn),b(Nn,Hn,null),u(Hn,Tn),u($n,yn),u($n,zn),An=!0},p(n,[r]){const a={};!en&&2&r&&(en=!0,a.codeExeProps=n[1],p((()=>en=!1))),tn.$set(a)},i(n){An||(B(V.$$.fragment,n),B(G.$$.fragment,n),B(J.$$.fragment,n),B(X.$$.fragment,n),B(Z.$$.fragment,n),B(tn.$$.fragment,n),B(gn.$$.fragment,n),B(hn.$$.fragment,n),B(wn.$$.fragment,n),B(En.$$.fragment,n),B(kn.$$.fragment,n),B(Sn.$$.fragment,n),B(Nn.$$.fragment,n),An=!0)},o(n){E(V.$$.fragment,n),E(G.$$.fragment,n),E(J.$$.fragment,n),E(X.$$.fragment,n),E(Z.$$.fragment,n),E(tn.$$.fragment,n),E(gn.$$.fragment,n),E(hn.$$.fragment,n),E(wn.$$.fragment,n),E(En.$$.fragment,n),E(kn.$$.fragment,n),E(Sn.$$.fragment,n),E(Nn.$$.fragment,n),An=!1},d(r){r&&o(i),R(V),R(G),R(J),R(X),R(Z),n[2](null),R(tn),R(gn),R(hn),R(wn),R(En),R(kn),R(Sn),R(Nn)}}}function H(n,a,t){let e,s={allowedGlobals:{},code:'const num = 10;\nlog("number: " + num);\nlog(\'"number": \' + "num");\nlog("number+: " + (num + num));\n\nconst str = "100";\nlog("string: " + str);\nlog(\'"string": \' + "str");\nlog("string+: " + (str + str));\n\nreturn str + num;',resultString:"",logs:[]};return[e,s,function(n){r[n?"unshift":"push"]((()=>{e=n,t(0,e)}))},function(n){s=n,t(1,s)}]}class L extends i{constructor(r){super(),h(this,r,H,C,n,{})}}export{L as component};
