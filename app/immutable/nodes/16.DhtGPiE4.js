import{s,p as n,e,a as t,t as a,c as r,b as o,m as l,f as c,d as u,g as i,h as m,i as f,j as d,r as h,u as $,q as p}from"../chunks/scheduler.Cp4pqcvj.js";import{S as g,i as v,f as w,b as x,d as b,m as B,t as C,a as E,e as R}from"../chunks/index.BnBan4aP.js";import{C as k}from"../chunks/CodeSpan.BLKkMGKW.js";import{C as H}from"../chunks/CodeExecuter.DSXtMKtX.js";import{n as L}from"../chunks/navigation.client.Cvkf92lb.js";function j(s){let g,v,L,j,P,T,N,q,D,I,S,V,M,y,G,O,U,z,A,F,J,K,Q,W,X,Y,Z,_,ss,ns,es,ts,as,rs,os,ls,cs,us,is,ms,fs,ds,hs,$s,ps,gs,vs="ループと条件分岐の組み合わせ",ws="ループと条件分岐を組み合わせることで、より複雑な処理を行うことができます。",xs='<strong class="bg-initial text-surface-900 hover:underline">Test Code Executer</strong> ';function bs(n){s[3](n)}G=new k({props:{data:[["for ","red"],["(","white"],["let ","red"],["num ","white"],["of ","red"],["nums)","white"]]}}),A=new k({props:{data:[["if ","red"],["(num % ","white"],["2","blue"],[" !== ","white"],["0","blue"],[")","white"]]}}),Q=new k({props:{data:["!==","white"]}});let Bs={};return void 0!==s[1]&&(Bs.codeExeProps=s[1]),ns=new H({props:Bs}),s[2](ns),n.push((()=>w(ns,"codeExeProps",bs))),{c(){g=e("div"),v=e("h2"),v.textContent=vs,L=t(),j=e("div"),P=e("hr"),T=t(),N=e("p"),N.textContent=ws,q=t(),D=e("hr"),I=t(),S=e("p"),V=a("このプログラムでは、1 から 6 までの数値の中から、奇数だけを取り出しています。\n      "),M=e("br"),y=a("\n      ループの条件式を "),x(G.$$.fragment),O=a(" のように書くと、配列の要素を 1つずつ取り出して処理することができます。\n      "),U=e("br"),z=a("\n      ループ処理を 6回繰り返し、それぞれの数値を "),x(A.$$.fragment),F=a(" で奇数か偶数か判定しています。\n      "),J=e("br"),K=a("\n      なお、 "),x(Q.$$.fragment),W=a(" は等しくない場合に「真」を返す演算子です。\n      "),X=e("br"),Y=a("\n      この例では、2で割り切れない場合に「真」となるため、奇数の場合のみ分岐内の処理を実行します。"),Z=t(),_=e("hr"),ss=t(),x(ns.$$.fragment),ts=t(),as=e("div"),rs=e("hr"),os=t(),ls=e("p"),cs=a("ここまでで、プログラミングの基礎的な概念を学びました。\n      "),us=e("br"),is=a("\n      「"),ms=e("button"),ms.innerHTML=xs,fs=a("」は自由にプログラムを書いて実行できる環境です。試してみましょう！"),ds=t(),hs=e("hr"),this.h()},l(s){g=r(s,"DIV",{class:!0});var n=o(g);v=r(n,"H2",{class:!0,"data-svelte-h":!0}),"svelte-1c4mjco"!==l(v)&&(v.textContent=vs),L=c(n),j=r(n,"DIV",{class:!0});var e=o(j);P=r(e,"HR",{class:!0}),T=c(e),N=r(e,"P",{"data-svelte-h":!0}),"svelte-5kqloq"!==l(N)&&(N.textContent=ws),q=c(e),D=r(e,"HR",{class:!0}),I=c(e),S=r(e,"P",{});var t=o(S);V=u(t,"このプログラムでは、1 から 6 までの数値の中から、奇数だけを取り出しています。\n      "),M=r(t,"BR",{}),y=u(t,"\n      ループの条件式を "),b(G.$$.fragment,t),O=u(t," のように書くと、配列の要素を 1つずつ取り出して処理することができます。\n      "),U=r(t,"BR",{}),z=u(t,"\n      ループ処理を 6回繰り返し、それぞれの数値を "),b(A.$$.fragment,t),F=u(t," で奇数か偶数か判定しています。\n      "),J=r(t,"BR",{}),K=u(t,"\n      なお、 "),b(Q.$$.fragment,t),W=u(t," は等しくない場合に「真」を返す演算子です。\n      "),X=r(t,"BR",{}),Y=u(t,"\n      この例では、2で割り切れない場合に「真」となるため、奇数の場合のみ分岐内の処理を実行します。"),t.forEach(i),Z=c(e),_=r(e,"HR",{class:!0}),e.forEach(i),ss=c(n),b(ns.$$.fragment,n),ts=c(n),as=r(n,"DIV",{class:!0});var a=o(as);rs=r(a,"HR",{class:!0}),os=c(a),ls=r(a,"P",{});var m=o(ls);cs=u(m,"ここまでで、プログラミングの基礎的な概念を学びました。\n      "),us=r(m,"BR",{}),is=u(m,"\n      「"),ms=r(m,"BUTTON",{"data-svelte-h":!0}),"svelte-swwko3"!==l(ms)&&(ms.innerHTML=xs),fs=u(m,"」は自由にプログラムを書いて実行できる環境です。試してみましょう！"),m.forEach(i),ds=c(a),hs=r(a,"HR",{class:!0}),a.forEach(i),n.forEach(i),this.h()},h(){m(v,"class","cLessonTitle"),m(P,"class","cBorderLine"),m(D,"class","cBorderLine"),m(_,"class","cBorderLine"),m(j,"class","w-full"),m(rs,"class","cBorderLine"),m(hs,"class","cBorderLine"),m(as,"class","w-full"),m(g,"class","cBookContents")},m(n,e){f(n,g,e),d(g,v),d(g,L),d(g,j),d(j,P),d(j,T),d(j,N),d(j,q),d(j,D),d(j,I),d(j,S),d(S,V),d(S,M),d(S,y),B(G,S,null),d(S,O),d(S,U),d(S,z),B(A,S,null),d(S,F),d(S,J),d(S,K),B(Q,S,null),d(S,W),d(S,X),d(S,Y),d(j,Z),d(j,_),d(g,ss),B(ns,g,null),d(g,ts),d(g,as),d(as,rs),d(as,os),d(as,ls),d(ls,cs),d(ls,us),d(ls,is),d(ls,ms),d(ls,fs),d(as,ds),d(as,hs),$s=!0,ps||(gs=h(ms,"click",$(s[4])),ps=!0)},p(s,[n]){const e={};!es&&2&n&&(es=!0,e.codeExeProps=s[1],p((()=>es=!1))),ns.$set(e)},i(s){$s||(C(G.$$.fragment,s),C(A.$$.fragment,s),C(Q.$$.fragment,s),C(ns.$$.fragment,s),$s=!0)},o(s){E(G.$$.fragment,s),E(A.$$.fragment,s),E(Q.$$.fragment,s),E(ns.$$.fragment,s),$s=!1},d(n){n&&i(g),R(G),R(A),R(Q),s[2](null),R(ns),ps=!1,gs()}}}function P(s,e,t){let a,r={allowedGlobals:{},code:'const nums = [1, 2, 3, 4, 5, 6];\nlet oddNums = [];\nfor (let num of nums) {\n  log("loop: num = " + num);\n  if (num % 2 !== 0) {\n    oddNums = [...oddNums, num];\n  }\n}\n\nreturn oddNums;',resultString:"",logs:[]};return[a,r,function(s){n[s?"unshift":"push"]((()=>{a=s,t(0,a)}))},function(s){r=s,t(1,r)},()=>L("/executer")]}class T extends g{constructor(n){super(),v(this,n,P,j,s,{})}}export{T as component};
