import{s as n,p as a,e,a as t,t as r,c as s,b as l,m as $,f as o,d as f,g as c,h as g,i,j as m,q as h}from"../chunks/scheduler.BHmUeXpX.js";import{S as p,i as d,f as u,b as w,d as B,m as v,t as R,a as b,e as x}from"../chunks/index.DEa-WhvI.js";import{C as E}from"../chunks/CodeSpan.CLzOd-Y1.js";import{C}from"../chunks/CodeExecuter.B1Kf-BD8.js";function H(n){let p,d,H,L,P,j,k,D,I,S,V,q,y,A,G,T,z,F,J,K,M,N,O,Q,U,W,X,Y,Z,_,nn,an,en,tn,rn,sn,ln,$n,on,fn,cn,gn,mn,hn,pn,dn,un,wn,Bn,vn,Rn,bn,xn,En,Cn,Hn,Ln,Pn,jn,kn,Dn,In,Sn,Vn,qn,yn,An,Gn,Tn,zn,Fn,Jn,Kn,Mn,Nn,On,Qn="データの配列",Un="配列は、数値型のデータだけでなく、様々な型のデータを要素として入れることができます。";function Wn(a){n[3](a)}I=new E({props:{data:["Array","white"]}}),y=new E({props:{data:["[]","white"]}}),G=new E({props:{data:[",","white"]}}),W=new E({props:{data:[["list[","white"],["0","blue"],["]","white"]]}}),_=new E({props:{data:["list.length","white"]}});let Xn={};return void 0!==n[1]&&(Xn.codeExeProps=n[1]),ln=new C({props:Xn}),n[2](ln),a.push((()=>u(ln,"codeExeProps",Wn))),Rn=new E({props:{data:["linl","white"]}}),Cn=new E({props:{data:["linl[0]","white"]}}),Ln=new E({props:{data:["linl[0][0]","white"]}}),Vn=new E({props:{data:["...","white"]}}),Gn=new E({props:{data:["linl","white"]}}),zn=new E({props:{data:[["[...l, ...[","white"],["8, 10","blue"],["]","white"]]}}),{c(){p=e("div"),d=e("h2"),d.textContent=Qn,H=t(),L=e("div"),P=e("hr"),j=t(),k=e("p"),D=r("「数値型」「文字列型」とは別のデータ型として、「配列("),w(I.$$.fragment),S=r(")型」というものがあります。\n      "),V=e("br"),q=r("\n      配列は複数のデータを一つの変数にまとめて保存するためのもので、括弧"),w(y.$$.fragment),A=r("\n      とカンマ"),w(G.$$.fragment),T=r(" を使って定義します。\n      "),z=e("br"),F=r("\n      「リスト」とよばれることもあります。"),J=t(),K=e("hr"),M=t(),N=e("p"),O=r("配列に含まれるそれぞれのデータを「要素」とよび、要素は左から 0番, 1番, 2番, ... と番号がついています。\n      "),Q=e("br"),U=r("\n      配列の要素を使うには、"),w(W.$$.fragment),X=r(" のように配列名に括弧をつけて番号を指定します。\n      "),Y=e("br"),Z=r("\n      また、"),w(_.$$.fragment),nn=r(" のように書くことで、配列のなかにいくつ要素があるか確認することもできます。\n      "),an=e("br"),en=r("\n      このプログラムを実行して、配列とその中の要素を表示できるか確認してみましょう。"),tn=t(),rn=e("hr"),sn=t(),w(ln.$$.fragment),on=t(),fn=e("div"),cn=e("hr"),gn=t(),mn=e("p"),mn.textContent=Un,hn=t(),pn=e("hr"),dn=t(),un=e("p"),wn=r("少し複雑ですが、配列のなかに配列を入れることもできます。\n      "),Bn=e("br"),vn=r("\n      変数"),w(Rn.$$.fragment),bn=r(" は配列の中に 2つの配列が入っており、要素数は 2 です。\n      "),xn=e("br"),En=t(),w(Cn.$$.fragment),Hn=r(" は配列の中の最初の要素で、\n      "),w(Ln.$$.fragment),Pn=r(" はその中の最初の要素です。"),jn=t(),kn=e("hr"),Dn=t(),In=e("p"),Sn=r("また、2つの配列から、それぞれの要素を含む1つの配列を作りたい場合は "),w(Vn.$$.fragment),qn=r(" を使って配列を展開します。\n      "),yn=e("br"),An=r("\n      変数"),w(Gn.$$.fragment),Tn=r(" に代入する部分を\n      "),w(zn.$$.fragment),Fn=r(" のように書き換えて実行してみましょう。\n      "),Jn=e("br"),Kn=r("\n      結果はどう変わりましたか？"),Mn=t(),Nn=e("hr"),this.h()},l(n){p=s(n,"DIV",{class:!0});var a=l(p);d=s(a,"H2",{class:!0,"data-svelte-h":!0}),"svelte-5pffgc"!==$(d)&&(d.textContent=Qn),H=o(a),L=s(a,"DIV",{class:!0});var e=l(L);P=s(e,"HR",{class:!0}),j=o(e),k=s(e,"P",{});var t=l(k);D=f(t,"「数値型」「文字列型」とは別のデータ型として、「配列("),B(I.$$.fragment,t),S=f(t,")型」というものがあります。\n      "),V=s(t,"BR",{}),q=f(t,"\n      配列は複数のデータを一つの変数にまとめて保存するためのもので、括弧"),B(y.$$.fragment,t),A=f(t,"\n      とカンマ"),B(G.$$.fragment,t),T=f(t," を使って定義します。\n      "),z=s(t,"BR",{}),F=f(t,"\n      「リスト」とよばれることもあります。"),t.forEach(c),J=o(e),K=s(e,"HR",{class:!0}),M=o(e),N=s(e,"P",{});var r=l(N);O=f(r,"配列に含まれるそれぞれのデータを「要素」とよび、要素は左から 0番, 1番, 2番, ... と番号がついています。\n      "),Q=s(r,"BR",{}),U=f(r,"\n      配列の要素を使うには、"),B(W.$$.fragment,r),X=f(r," のように配列名に括弧をつけて番号を指定します。\n      "),Y=s(r,"BR",{}),Z=f(r,"\n      また、"),B(_.$$.fragment,r),nn=f(r," のように書くことで、配列のなかにいくつ要素があるか確認することもできます。\n      "),an=s(r,"BR",{}),en=f(r,"\n      このプログラムを実行して、配列とその中の要素を表示できるか確認してみましょう。"),r.forEach(c),tn=o(e),rn=s(e,"HR",{class:!0}),e.forEach(c),sn=o(a),B(ln.$$.fragment,a),on=o(a),fn=s(a,"DIV",{class:!0});var g=l(fn);cn=s(g,"HR",{class:!0}),gn=o(g),mn=s(g,"P",{"data-svelte-h":!0}),"svelte-1t3p5ff"!==$(mn)&&(mn.textContent=Un),hn=o(g),pn=s(g,"HR",{class:!0}),dn=o(g),un=s(g,"P",{});var i=l(un);wn=f(i,"少し複雑ですが、配列のなかに配列を入れることもできます。\n      "),Bn=s(i,"BR",{}),vn=f(i,"\n      変数"),B(Rn.$$.fragment,i),bn=f(i," は配列の中に 2つの配列が入っており、要素数は 2 です。\n      "),xn=s(i,"BR",{}),En=o(i),B(Cn.$$.fragment,i),Hn=f(i," は配列の中の最初の要素で、\n      "),B(Ln.$$.fragment,i),Pn=f(i," はその中の最初の要素です。"),i.forEach(c),jn=o(g),kn=s(g,"HR",{class:!0}),Dn=o(g),In=s(g,"P",{});var m=l(In);Sn=f(m,"また、2つの配列から、それぞれの要素を含む1つの配列を作りたい場合は "),B(Vn.$$.fragment,m),qn=f(m," を使って配列を展開します。\n      "),yn=s(m,"BR",{}),An=f(m,"\n      変数"),B(Gn.$$.fragment,m),Tn=f(m," に代入する部分を\n      "),B(zn.$$.fragment,m),Fn=f(m," のように書き換えて実行してみましょう。\n      "),Jn=s(m,"BR",{}),Kn=f(m,"\n      結果はどう変わりましたか？"),m.forEach(c),Mn=o(g),Nn=s(g,"HR",{class:!0}),g.forEach(c),a.forEach(c),this.h()},h(){g(d,"class","cLessonTitle"),g(P,"class","cBorderLine"),g(K,"class","cBorderLine"),g(rn,"class","cBorderLine"),g(L,"class","w-full"),g(cn,"class","cBorderLine"),g(pn,"class","cBorderLine"),g(kn,"class","cBorderLine"),g(Nn,"class","cBorderLine"),g(fn,"class","w-full"),g(p,"class","cBookContents")},m(n,a){i(n,p,a),m(p,d),m(p,H),m(p,L),m(L,P),m(L,j),m(L,k),m(k,D),v(I,k,null),m(k,S),m(k,V),m(k,q),v(y,k,null),m(k,A),v(G,k,null),m(k,T),m(k,z),m(k,F),m(L,J),m(L,K),m(L,M),m(L,N),m(N,O),m(N,Q),m(N,U),v(W,N,null),m(N,X),m(N,Y),m(N,Z),v(_,N,null),m(N,nn),m(N,an),m(N,en),m(L,tn),m(L,rn),m(p,sn),v(ln,p,null),m(p,on),m(p,fn),m(fn,cn),m(fn,gn),m(fn,mn),m(fn,hn),m(fn,pn),m(fn,dn),m(fn,un),m(un,wn),m(un,Bn),m(un,vn),v(Rn,un,null),m(un,bn),m(un,xn),m(un,En),v(Cn,un,null),m(un,Hn),v(Ln,un,null),m(un,Pn),m(fn,jn),m(fn,kn),m(fn,Dn),m(fn,In),m(In,Sn),v(Vn,In,null),m(In,qn),m(In,yn),m(In,An),v(Gn,In,null),m(In,Tn),v(zn,In,null),m(In,Fn),m(In,Jn),m(In,Kn),m(fn,Mn),m(fn,Nn),On=!0},p(n,[a]){const e={};!$n&&2&a&&($n=!0,e.codeExeProps=n[1],h((()=>$n=!1))),ln.$set(e)},i(n){On||(R(I.$$.fragment,n),R(y.$$.fragment,n),R(G.$$.fragment,n),R(W.$$.fragment,n),R(_.$$.fragment,n),R(ln.$$.fragment,n),R(Rn.$$.fragment,n),R(Cn.$$.fragment,n),R(Ln.$$.fragment,n),R(Vn.$$.fragment,n),R(Gn.$$.fragment,n),R(zn.$$.fragment,n),On=!0)},o(n){b(I.$$.fragment,n),b(y.$$.fragment,n),b(G.$$.fragment,n),b(W.$$.fragment,n),b(_.$$.fragment,n),b(ln.$$.fragment,n),b(Rn.$$.fragment,n),b(Cn.$$.fragment,n),b(Ln.$$.fragment,n),b(Vn.$$.fragment,n),b(Gn.$$.fragment,n),b(zn.$$.fragment,n),On=!1},d(a){a&&c(p),x(I),x(y),x(G),x(W),x(_),n[2](null),x(ln),x(Rn),x(Cn),x(Ln),x(Vn),x(Gn),x(zn)}}}function L(n,e,t){let r,s={allowedGlobals:{},code:'const l = [2, 4, 6];\nlog("list: " + l);\nlog("[0]: " + l[0]);\nlog("[1]+[2]: " + (l[1] + l[2]));\nlog("list len: " + l.length);\n\nconst linl = [l, [8, 10]]\nlog("linl[0]: " + linl[0]);\nlog("linl[0][0]: " + linl[0][0]);\nlog("linl[1][0]: " + linl[1][0]);\nlog("linl len: " + linl.length);\nreturn linl;',resultString:"",logs:[]};return[r,s,function(n){a[n?"unshift":"push"]((()=>{r=n,t(0,r)}))},function(n){s=n,t(1,s)}]}class P extends p{constructor(a){super(),d(this,a,L,H,n,{})}}export{P as component};
