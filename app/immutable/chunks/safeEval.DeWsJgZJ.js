const e=e=>new Proxy(e,{has:(e,r)=>{if(r in e)return!0;throw new Error(`"${String(r)}" is not exist or not allowed.`)},get:(e,r)=>{if("string"==typeof r&&r in e)return e[r]}});function r(r,t){let n,o,s;if(r)try{const i=function(r,t){return new Function("proxy",`with (proxy) { "use strict"; ${r} }`)(e(t))}(r,t);s="string"==typeof i||"number"==typeof i||"boolean"==typeof i?String(i):Array.isArray(i)||"object"==typeof i?JSON.stringify(i,null,2):"(No Results)",n="Executed successfully.",o="Succeed"}catch(i){console.error("Failed to execute code:",i),s="(Failed)",n=i instanceof Error?`${i.name}: ${i.message}`:"UnknownError",o="Error"}else n="Code is empty.",o="Warning",s=null;return{resultString:s,message:n,status:o}}export{r as e};
